/* //Media Querry Manager
87em  1392px big- extra extra large      
75  1200px    xl - extra large
62  992px     lg - large
48  768px     sm - medium
36  576px     xs - small

*/
/* // how we use - in element:
   @include respond(tab-land) {
    finst-size:12rem;
   }
   */
/* COLORS */
/*GRID*/
/* FONTS */
/* 60 px at 1980 */
/*25px at 1980 */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html, body {
  overflow-x: hidden;
}

html {
  /* font-size:10px
   10px / 16 px = 0.625=62.5%
   Precetage of user's browser font-size setting
  */
  font-size: 62.5%;
  max-width: 100vw;
}

body {
  box-sizing: border-box;
  color: #A2A2A2;
  max-width: 100%;
}

/*

// -- 01 TYPOGRAPHY SYSTEM

// Font sizes (px)
// 10 / 12 / 14 / 16/ 18/ 20 / 24 /30 / 36 / 44 / 52 /62 / 74 / 86 / 98

// font-weights: 400


// test

// line heights:
// Default: 1



//     font-family: 'Indie Flower', cursive;

//     font-family: 'Inter', sans-serif;

//     font-family: 'Nunito Sans', sans-serif;

//     font-family: 'Playfair Display', serif;

//     font-family: 'Roboto', sans-serif;
// --02 COLORS

// -- 05 SHADOWS

// -- 06 BORDER RADIUS

// -- 07 WHITESPACES

// Spacing Systempx)
// 2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 /80 / 96 /128

// */
body {
  font-family: "Inter", sans-serif;
  line-height: 1;
  font-weight: 400;
}

/* ****************************************************************/
/* GENERAL REUSABLE COMPONENTS*/
/* ****************************************************************/
.cointainer {
  max-width: 120rem;
  padding-left: 4rem;
  padding-right: 4rem;
  margin: 0 auto;
  /* padding:0 3.2rem; */
}

.grid {
  display: grid;
  gap: 8.6rem;
}

.grid--2-columns {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-columns {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  justify-items: stretch;
}
@media (max-width: 75em) {
  .grid--3-columns {
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}
@media (max-width: 48em) {
  .grid--3-columns {
    grid-template-columns: minmax(0, 1fr);
    gap: 2rem;
  }
}

.grid--4-columns {
  grid-template-columns: repeat(4, 1fr);
}

.margin-left-middle {
  margin-left: 8rem !important;
}

.btn-reservation:link, .btn-reservation:visited {
  background-color: #E4AA3F;
  color: #000;
  font-size: calc(1.8rem + 0.25vw);
  font-weight: 700;
  padding: 1rem 2rem;
  text-decoration: none;
  text-transform: uppercase;
  /* border-radius:9px; */
  transition: all 0.3s;
}
.btn-reservation:hover, .btn-reservation:active {
  color: #000;
  /* trick to add border inside */
  box-shadow: 0 0 0 3px #f0eeeb;
}

.header {
  background-color: #191419;
}
.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto;
  max-width: 200rem;
  height: 9.6rem;
  padding: 0 20rem;
}
@media (max-width: 75em) {
  .header-container {
    width: 100%;
    padding-left: 4rem;
    padding-right: 4rem;
  }
}
.header-container-name {
  font-size: 2.2rem;
  color: #f0eeeb;
}
.header-container-name__phone-call:link, .header-container-name__phone-call:visited, .header-container-name__phone-call:hover, .header-container-name__phone-call:active {
  text-decoration: none;
  color: #f0eeeb;
}
@media (max-width: 87em) {
  .header-container-name__phone-call:link, .header-container-name__phone-call:visited, .header-container-name__phone-call:hover, .header-container-name__phone-call:active {
    font-size: calc(2rem + 0.25vw);
  }
}
.header-phone-icon {
  height: 2.8rem;
  vertical-align: middle;
  margin-right: 0.5rem;
  filter: invert(98%) sepia(65%) saturate(336%) hue-rotate(294deg) brightness(105%) contrast(88%);
}
.header-main-nav-list {
  display: flex;
  align-items: center;
  gap: 3.2rem;
  max-width: 140rem;
  list-style: none;
}
@media (max-width: 75em) {
  .header-main-nav-list {
    position: fixed;
    left: -100%;
    top: 7rem;
    height: 100vh;
    gap: 1rem;
    padding-top: 2rem;
    padding-bottom: 2rem;
    flex-direction: column;
    background-color: #262626;
    width: 100%;
    text-align: center;
    transition: all 0.3s;
    z-index: 100;
  }
}
.header-main-nav-link:link, .header-main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  font-size: calc(1.6rem + 0.25vw);
  font-weight: 500;
  color: #C2C2C2;
  transition: all 0.3s;
}
.header-main-nav-link:hover, .header-main-nav-link:active {
  color: #FFB224;
}
.header-main-nav-link_nav-cta:link, .header-main-nav-link_nav-cta:visited {
  background-color: #FFB224;
  color: #222;
  font-size: calc(1.8rem + 0.25vw);
  font-weight: 700;
  padding: 1.2rem 2.4rem;
  text-decoration: none;
  text-transform: uppercase;
  transition: all 0.3s;
}
.header-main-nav-link_nav-cta:hover, .header-main-nav-link_nav-cta:active {
  color: #000;
  /* trick to add border inside */
  box-shadow: 0 0 0 3px #f0eeeb;
}

.menu-hamburger {
  display: none;
  cursor: pointer;
}
@media (max-width: 75em) {
  .menu-hamburger {
    display: block;
  }
  .menu-hamburger.active .menu-hamburger__bar:nth-child(2) {
    opacity: 0;
  }
  .menu-hamburger.active .menu-hamburger__bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  .menu-hamburger.active .menu-hamburger__bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
}
.menu-hamburger__bar {
  display: block;
  width: 1.8rem;
  height: 3px;
  margin: 0.5rem auto;
  transition: all 0.3s ease-in-out;
  background-color: #f0eeeb;
}

.header-main-nav-list.active {
  left: 0;
}

/* ****************************************************************/
/* FOOTER  CONTACT*/
/* ****************************************************************/
.section-contact {
  background-color: #191419;
  padding-bottom: 9.6rem;
  padding-left: 4rem;
  padding-right: 4rem;
}
.section-contact-container {
  max-width: 120rem;
  margin: 0 auto;
}
.section-contact-header {
  font-size: calc(2.1rem + 0.9vw);
  color: #f0eeeb;
  margin: 0 auto;
}
.section-contact-flex-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto;
  gap: 3.4rem;
}
@media (max-width: 75em) {
  .section-contact-flex-container {
    justify-content: flex-start;
  }
}
.section-contact-google-map {
  display: inline-block;
  margin: 0 auto;
}
@media (max-width: 48em) {
  .section-contact-google-map {
    text-align: center;
  }
}
.section-contact-adress {
  width: 30%;
  margin: 0 auto;
  display: block;
}
@media (max-width: 62em) {
  .section-contact-adress {
    width: 80%;
  }
}

.tag-adress {
  color: #FFB224;
}

.adress {
  font-size: calc(1rem + 1vw);
  padding-top: 2.6rem;
  padding-bottom: 2.6rem;
  color: #C2C2C2;
  line-height: 1.6;
}

.section-call-location-icon {
  height: 6.4rem;
  vertical-align: middle;
  margin-right: 1rem;
  filter: invert(32%) sepia(11%) saturate(0%) hue-rotate(193deg) brightness(95%) contrast(88%);
}

.google-maps-iframe {
  width: 65rem;
  height: 40rem;
  display: block;
  margin: 0 auto;
}
@media (max-width: 87em) {
  .google-maps-iframe {
    width: 55rem;
    height: 40rem;
  }
}
@media (max-width: 62em) {
  .google-maps-iframe {
    width: 80vw;
  }
}
/* ****************************************************************/
/* SECTION cta call */
/* ****************************************************************/
.section-call {
  background-color: #191419;
  padding-top: 3.2rem;
  padding-bottom: 3.2rem;
  padding-left: 4rem;
  padding-right: 4rem;
}
@media (max-width: 48em) {
  .section-call {
    padding-bottom: 2rem;
  }
}
.section-call-grid-container {
  display: grid;
  grid-template-columns: 6fr 2fr;
  gap: 0rem;
  justify-items: center;
  align-items: center;
  justify-content: center;
  align-content: center;
  min-height: 45rem;
  max-width: 140rem;
  margin: 0 auto;
  background-color: #222;
  box-shadow: 0px 0px 3px 1px rgb(34, 34, 34);
  border-radius: 5px;
}
@media (max-width: 48em) {
  .section-call-grid-container {
    grid-template-columns: 1fr;
    gap: 6.4rem;
    padding-bottom: 3.2rem;
  }
}
.section-call-buttons-cta-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 3.2rem;
}
.section-call-phone-icon {
  height: calc(1.8rem + 0.25vw);
  vertical-align: middle;
  margin-right: 1rem;
  filter: invert(16%) sepia(15%) saturate(0%) hue-rotate(163deg) brightness(109%) contrast(95%);
}
.section-call-header-text {
  font-size: calc(2rem + 1.6vw);
  color: #F6E3C1;
  font-weight: bold;
  padding-top: 3.2rem;
}
.section-call-marketing-promo-text {
  font-size: calc(1rem + 0.9vw);
  color: #f0eeeb;
  font-weight: bold;
  padding-top: 3.2rem;
  padding-bottom: 6.6rem;
}
.section-call-choose-text {
  font-size: calc(1.8rem + 0.25vw);
  color: #f0eeeb;
  font-weight: 700;
  padding-left: 1.6rem;
  padding-right: 1.6rem;
}
.section-call-video-gif-cointainer {
  text-align: left;
  height: 135%;
  width: 135%;
}
@media (max-width: 48em) {
  .section-call-video-gif-cointainer {
    width: 50vw;
  }
}
.section-call-img {
  height: 100%;
}
@media (max-width: 48em) {
  .section-call-img {
    width: 80%;
  }
}

.btn-cta-call:link, .btn-cta-call:visited, .btn-cta-facebook-messenger:link, .btn-cta-facebook-messenger:visited {
  background-color: #666;
  color: whitesmoke;
  font-size: calc(1.8rem + 0.25vw);
  font-weight: 700;
  padding: 1.2rem 2.4rem;
  text-decoration: none;
  text-transform: uppercase;
  /* border-radius:9px; */
  transition: all 0.3s;
}
.btn-cta-call:hover, .btn-cta-call:active, .btn-cta-facebook-messenger:hover, .btn-cta-facebook-messenger:active {
  color: #000;
  /* trick to add border inside */
  box-shadow: 0 0 0 3px #f0eeeb;
}

@media (max-width: 75em) {
  .btn-cta-facebook-messenger img,
.btn-cta-call img {
    display: block;
    margin: 0 auto;
  }
  .btn-cta-facebook-messenger span,
.btn-cta-call span {
    line-height: 1.6;
  }
  .btn-cta-call:link, .btn-cta-call:visited, .btn-cta-facebook-messenger:link, .btn-cta-facebook-messenger:visited {
    padding: 0.6rem 2.5rem;
  }
}
/* ****************************************************************/
/* SECTION GALLERY*/
/* ****************************************************************/
.section-galery {
  background-color: #191419;
  padding-top: 14rem;
  padding-bottom: 14rem;
  padding-left: 4rem;
  padding-right: 4rem;
}

.galery-name {
  font-size: calc(2.1rem + 0.9vw);
  font-weight: 700;
  padding-bottom: 3.2rem;
  padding-left: 10vw;
  margin: 0 auto;
  text-align: left;
  color: #f0eeeb;
}

.galery-instruction {
  display: inline-block;
  font-size: calc(1.6rem + 0.25vw);
  font-weight: 400;
  padding-bottom: 3.2rem;
  padding-left: 11vw;
  margin: 0 auto;
  text-align: right;
  color: #f0eeeb;
  color: orange;
  letter-spacing: 1.5px;
}

* {
  box-sizing: border-box;
  position: relative;
}

html, body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
  height: auto;
  transform-origin: top left;
}

.gallery {
  display: flex;
  flex-flow: wrap;
  justify-content: center;
  align-content: space-between;
  overflow: hidden;
  gap: 4rem;
  /* Re-order items into rows */
}
.gallery .gallery-image {
  width: 15%;
  box-shadow: rgba(255, 178, 36, 0.4) 5px 5px, rgba(255, 178, 36, 0.3) 10px 10px, rgba(255, 178, 36, 0.2) 15px 15px, rgba(255, 178, 36, 0.1) 20px 20px, rgba(255, 178, 36, 0.005) 25px 25px;
}
.gallery .gallery-image[data-flipping] {
  opacity: 1;
  z-index: 3;
}
.gallery .gallery-image:nth-child(3n+1) {
  order: 1;
}
.gallery .gallery-image:nth-child(3n+2) {
  order: 2;
}
.gallery .gallery-image:nth-child(3n+3) {
  order: 3;
}

.gallery-image {
  margin: 0;
  display: block;
  position: relative;
}
.gallery-image img {
  display: block;
  width: 100%;
}
.gallery-image figcaption {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  color: #FFF;
  text-shadow: 0 0 1px #000;
  opacity: 0.8;
  padding: 1em;
  text-align: left;
  transition: opacity 0.4s linear;
  font-family: monospace;
}
.gallery-image:hover figcaption {
  opacity: 1;
}

.detail {
  z-index: 2;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(25, 25, 25, 0);
  box-shadow: 0 0 30px #000;
  display: flex;
  pointer-events: none;
  transition: background 0.3s linear;
}
.detail .gallery-image {
  padding: 5vmin;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.detail .gallery-image img {
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
}
.detail .gallery-image figcaption {
  display: none;
}

[data-state=detail] .detail {
  background: rgba(25, 25, 25, 0.85);
  pointer-events: auto;
}
[data-state=detail] .detail .gallery-image {
  opacity: 1;
}

[data-state=gallery] .detail .gallery-image {
  opacity: 0;
  transition: none;
}

/* ---------------------------------- */
body {
  background: black;
}

#app {
  pointer-events: none;
}
#app .gallery .gallery-image {
  pointer-events: auto;
}

.gallery-image {
  transition: opacity 0.5s linear;
  border: solid 2px #FFB224;
}

#app:hover .gallery .gallery-image {
  opacity: 0.3;
}
#app:hover .gallery .gallery-image[data-flipping],
#app:hover .gallery .gallery-image:hover {
  opacity: 1;
  transition-duration: all 0.2s;
  cursor: zoom-in;
}

/* ****************************************************************/
/* SECTION hashtags */
/* ****************************************************************/
.section-hashtags {
  background-color: #E4AA3F;
  padding-bottom: 3.6rem;
  padding-top: 3.6rem;
}
.section-hashtags-container {
  width: 100vw;
  margin: 0 auto;
}
.section-hashtags-h2 {
  display: block;
  font-size: calc(1rem + 1vw);
  line-height: 2.1;
  text-align: center;
  color: #000;
  letter-spacing: -0.2px;
  /* padding-left: 3.2rem; */
}

/* ****************************************************************/
/* HERO SECTION*/
/* ****************************************************************/
.hero {
  max-width: 140rem;
  display: grid;
  gap: 6.4rem;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  margin: 0 auto;
  min-height: 45vh;
}
@media (max-width: 48em) {
  .hero {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 5.2rem;
  }
}
.hero-section {
  background-color: #191419;
  /* padding:2.4rem; */
  padding-left: 4rem;
  padding-bottom: 9.6rem;
  padding-top: 6.4rem;
}
@media (max-width: 48em) {
  .hero-section {
    padding-bottom: 3.2rem;
  }
}
.hero-descryption {
  padding-bottom: 2.4rem;
  font-weight: 500;
  line-height: 3.5rem;
  font-size: calc(1rem + 0.9vw);
  margin-bottom: 4rem;
  color: #A2A2A2;
}
@media (max-width: 48em) {
  .hero-descryption {
    margin-bottom: 2.4rem;
  }
}
.hero-primary {
  font-size: calc(2rem + 2.1vw);
  font-weight: 700;
  line-height: 1.05;
  color: #f0eeeb;
  /* padding-left:8rem; */
  margin-bottom: 6.4rem;
  letter-spacing: -0.5px;
}
@media (max-width: 48em) {
  .hero-primary {
    margin-bottom: 1.8rem;
  }
}
.hero-img {
  width: 100%;
  opacity: 0.8;
  border-radius: 15px;
}
@media (max-width: 48em) {
  .hero-img {
    display: block;
    margin: 0 auto;
  }
}
@media (max-width: 48em) {
  .hero-container {
    padding-top: 8.2rem;
  }
}

/* ****************************************************************/
/* SECTION SERVICES*/
/* ****************************************************************/
.services {
  padding-top: 6.4rem;
  padding-bottom: 9.6rem;
  margin: 0 auto;
  background-color: #171217;
  color: #f0eeeb;
}
@media (max-width: 75em) {
  .services {
    padding-top: 0;
  }
}
@media (max-width: 48em) {
  .services {
    padding-top: 0;
  }
}
.services-line-separator {
  line-height: 1.5;
  background-color: #A2A2A2;
  width: 40%;
  height: 1px;
}
.services-number {
  /* padding:3.2rem; */
  font-size: calc(2rem + 1vw);
  padding-bottom: 1.6rem;
  color: #A2A2A2;
}
.services-name {
  font-size: calc(1rem + 1vw);
  letter-spacing: 0.9px;
  padding-top: 2.6rem;
  padding-bottom: 2.6rem;
  color: #FFB224;
}
.services-add-space {
  line-height: 2;
}
.services-descryption {
  font-size: calc(1.2rem + 0.25vw);
  letter-spacing: 1.5px;
  line-height: 1.5;
  color: #C2C2C2;
  padding-bottom: 1.6rem;
}
.services-info {
  padding-top: 12rem;
  Font-size: calc(2.1rem + 0.9vw);
  font-weight: 700;
  text-align: center;
  letter-spacing: 0.5px;
}
@media (max-width: 48em) {
  .services-info {
    display: flex;
    justify-items: center;
    align-items: center;
    padding-left: 6.2rem;
    padding-right: 6.2rem;
  }
}
.services-img {
  padding-top: 6.4rem;
  width: 85%;
  opacity: 0.8;
}
@media (max-width: 75em) {
  .services-img {
    display: block;
    width: 24rem;
    margin: 0 auto;
  }
}
@media (max-width: 48em) {
  .services-img {
    width: 40%;
  }
}
@media (max-width: 75em) {
  .services .cointainer {
    max-width: 115rem;
  }
  .services .order-three {
    grid-row: 1;
    grid-column: 2;
  }
  .services .order-four {
    grid-row: 3;
    grid-column: 1;
  }
}
@media (max-width: 48em) {
  .services .cointainer {
    padding-left: 3.2rem;
    padding-right: 3.2rem;
  }
  .services .order-three {
    padding-top: 2rem;
    grid-row: 1;
    grid-column: 1;
  }
  .services .order-four {
    padding-top: 2rem;
    grid-row: 4;
    grid-column: 1;
  }
}

/* ****************************************************************/
/* SECTION testimonials*/
/* ****************************************************************/
.section-testimonials {
  background-color: #191419;
  padding-bottom: 18rem;
  padding-top: 14rem;
  margin: 0 auto;
}

.testimonials {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  font-size: calc(1.4rem + 0.25vw);
  line-height: 1.5;
  letter-spacing: 0.3px;
  min-height: 35rem;
  color: #C2C2C2;
  border: calc(1rem + 0.1vw) solid transparent;
  box-shadow: 0 0 3px 3px rgba(7, 7, 7, 0.5);
  border-radius: 9px;
  border-radius: 1rem;
  background-color: #242424;
  transition: 0.4s all;
}
.testimonials:hover {
  transform: scale(1.05);
  transform: translateY(-0.5rem);
}
@media (max-width: 75em) {
  .testimonials {
    min-width: 30%;
    max-width: 30%;
  }
}
@media (max-width: 62em) {
  .testimonials {
    min-width: 45%;
    max-width: 45%;
    min-height: 30rem;
  }
}
@media (max-width: 48em) {
  .testimonials {
    min-width: 95%;
    max-width: 95%;
  }
}
.testimonials-cointainer {
  display: grid;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(4, 1fr);
  row-gap: 3.6rem;
  -moz-column-gap: 3.6rem;
       column-gap: 3.6rem;
  padding-top: 2.4rem;
  padding-left: 4rem;
  padding-right: 4rem;
  max-width: 140rem;
}
@media (max-width: 75em) {
  .testimonials-cointainer {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    margin: 0 auto;
    justify-content: center;
    align-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
  }
}
.testimonials-tag-facebook {
  background-color: #EECC8B;
  color: #333;
  color: #0e0f11;
  padding: 0.1rem;
  width: 11rem;
  text-align: center;
  border-radius: 9px;
  margin-left: 2rem;
  margin-top: 2.4rem;
  margin-bottom: 2rem;
  align-self: flex-start;
  text-transform: uppercase;
  font-size: calc(1.2rem + 0.25vw);
}
.testimonials-tag-google {
  background-color: #e9ecef;
  color: #333;
  background-color: #F6E3C1;
  color: #0e0f11;
  padding: 0.1rem;
  width: 11rem;
  text-align: center;
  border-radius: 9px;
  margin-left: 2rem;
  margin-top: 2.4rem;
  margin-bottom: 2rem;
  align-self: flex-start;
  text-transform: uppercase;
  font-size: calc(1.2rem + 0.25vw);
}
.testimonials-text {
  padding-left: 2rem;
  padding-right: 2rem;
  padding-top: 2rem;
  padding-bottom: 2rem;
  letter-spacing: 0.3px;
  line-height: 1.5;
  font-size: calc(1.2rem + 0.25vw);
}
.testimonials-number-three {
  align-self: flex-start;
}
.testimonials-person-name {
  padding-top: 2.4rem;
  padding-left: 3rem;
  font-size: calc(1.2rem + 0.25vw);
  line-height: 1.3;
  color: #D1D1D1;
  align-self: flex-start;
  font-weight: bold;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
